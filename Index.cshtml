@{
    ViewBag.Title = "Purchase | Al-Dabet Dubai";
    Layout = "~/Views/Shared/_LayoutTrack.cshtml";
}
<div class="page-breadcrumb">
    <div class="row">
        <div class="col-12 d-flex no-block align-items-center">
            <h4 class="page-title">Purchase</h4>
            <div class="ml-auto text-right">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home", null)">Home</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Purchase</li>
                    </ol>
                </nav>
            </div>
        </div>
    </div>
</div>
<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div id="pageListPurchase">
                    <div class="card-body">
                        <div>
                            <button type="button" class="btn btn-sm btn-primary float-right goNewPurchase"
                                    data-toggle="tooltip" data-placement="top" title="Add New Purchase">
                                <i class="fas fa-plus"></i> New Purchase
                            </button>
                            <h4 class="card-title subinfo float-left">List of Purchases</h4>
                        </div>
                        <div class="clearfix border-bottom"></div>
                        <div class="m-t-15">
                            <table class="table table-hover table-bordered" id="tPurchases">
                                <thead>
                                    <tr>
                                        <th><strong>Purchase Date</strong></th>
                                        <th><strong>Supplier Name</strong></th>
                                        <th><strong>Invoice</strong></th>
                                        <th><strong>Item Name</strong></th>
                                        <th><strong>Quantity purchase</strong></th>
                                        <th><strong>Options</strong></th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                                <tfoot>
                                    <tr>
                                        <th><strong>Purchase Date</strong></th>
                                        <th><strong>Supplier Name</strong></th>
                                        <th><strong>Invoice</strong></th>
                                        <th><strong>Item Name</strong></th>
                                        <th><strong>Quantity purchase</strong></th>
                                        <th><strong>Options</strong></th>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                </div>
                <div id="pageAddPurchase" style="display:none;">
                    <div class="card-body">
                        <div>
                            <h4 class="card-title subinfo">Add New Purchase</h4>
                        </div>
                        <div class="border-top clearfix"></div>
                        <div class="form-group row m-t-15">
                            <label for="purchaseSupplier" class="col-sm-3 text-left control-label col-form-label">Supplier Name</label>
                            <div class="col-sm-9">
                                <select class="form-control custom-select" style="width: 100%;" id="purchaseSupplier"></select>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="purchaseDate" class="col-sm-3 text-left control-label col-form-label">Date of purchase</label>
                            <div class="col-sm-9">
                                <div class="input-group">
                                    <input type="text" class="form-control" readonly="readonly" id="purchaseDate" placeholder="mm/dd/yyyy">
                                    <div class="input-group-append">
                                        <span class="input-group-text"><i class="fas fa-calendar"></i></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="purchaseInvoiceNo" class="col-sm-3 text-left control-label col-form-label">Invoice Number</label>
                            <div class="col-sm-9">
                                <input type="text" class="form-control" id="purchaseInvoiceNo" placeholder="Invoice Number">
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="purchaseItem" class="col-sm-3 text-left control-label col-form-label">Item Name</label>
                            <div class="col-sm-9">
                                <select class="form-control custom-select" style="width: 100%;" id="purchaseItem"></select>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="purchaseQuantity" class="col-sm-3 text-left control-label col-form-label">Quantity purchase</label>
                            <div class="col-sm-3">
                                <input type="text" class="form-control" id="purchaseQuantity" placeholder="Quantity purchase">
                            </div>
                            <div class="col-sm-6">
                                <label for="purchaseImie" class="d-inline text-right control-label col-form-label">IMEI </label>
                                <div class="d-inline custom-control custom-radio m-l-20">
                                    <input type="radio" class="custom-control-input" id="imie1" name="imie" value="1">
                                    <label class="custom-control-label" for="imie1">One</label>
                                </div>
                                <div class="d-inline custom-control custom-radio m-l-20">
                                    <input type="radio" class="custom-control-input" id="imie2" name="imie" value="2">
                                    <label class="custom-control-label" for="imie2">Two</label>
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="imieOne" class="col-sm-3 text-left control-label col-form-label">IMEI 1</label>
                            <div class="col-sm-9">
                                <input type="text" class="form-control" id="imieOne" placeholder="IMEI 1 ">
                            </div>
                        </div>
                        @*<div class="input-field">
            <label for="isbn_input">EAN:</label>
            <input id="isbn_input" class="isbn" type="text" />
            <button type="button" class="fa fa-barcode"> </button>
        </div>*@
                        <div class="row">
                            <div class="col-xl-6">
                                <div class="input-group">
                                    <input id="scanner_input" class="form-control" placeholder="Click the button to scan an EAN..."
                                           type="text"> <span class="input-group-btn">

                                        <button class="btn btn-secondary" type="button" data-toggle="modal" data-target="#livestream_scanner">

                                            <i class="fa fa-barcode"></i>

                                        </button>

                                    </span>
                                </div>
                                <!-- /input-group -->
                            </div>
                            <!-- /.col-xl-6 -->
                        </div>
                        <!-- /.row -->
                        <div class="modal" id="livestream_scanner">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&#xD7;</span>
                                        </button>
                                        <h4 class="modal-title">Barcode Scanner</h4>
                                    </div>
                                    <div class="modal-body" style="position: static">
                                        <div id="interactive" class="viewport"></div>
                                        <div class="error"></div>
                                    </div>
                                    <div class="modal-footer">
                                        <label class="btn btn-secondary float-left">
                                            <i class="fa fa-camera"></i> Use camera app
                                            <input type="file" accept="image/*;capture=camera"
                                                   capture="camera" class="hidden">
                                        </label>
                                        <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                                    </div>
                                </div>
                                <!-- /.modal-content -->
                            </div>
                            <!-- /.modal-dialog -->
                        </div>
                        <!-- /.modal -->
                    </div>
                    <div class="border-top">
                        <div class="card-body">
                            <button type="button" class="btn btn-success" id="goUpsertPurchase">Save</button>
                            <button type="button" class="btn btn-outline-dark goCancelNewPurchase">Cancel</button>
                        </div>
                    </div>
                    <table class="table table-sm" id="tImei" style="display:none;">
                        <thead>
                            <tr>
                                <th scope="col">#</th>
                                <th scope="col"><strong>IMEI ONE</strong></th>
                                <th scope="col"><strong>IMEI TWO</strong></th>
                                <th scope="col"><strong>OPTIONS</strong></th>
                            </tr>
                        </thead>
                    </table>
                </div>
                <div id="pageViewPurchase" style="display:none;">
                    <div class="card-body">
                        <div>
                            <h4 class="float-right"><strong>INVOICE # <span id="viewPurchaseInvoice"></span></strong></h4>
                            <h4 class="card-title subinfo">Purchase Details</h4>
                        </div>
                        <div class="border-top clearfix"></div>
                        <div class="row m-t-15 float-left">
                            <address>
                                <h4> &nbsp;<b class="text-danger m-l-5"><span id="viewPurchaseSupplier"></span></b></h4>
                            </address>
                        </div>
                        <div class="m-t-15 float-right">
                            <b>Invoice Date :</b> <i class="fa fa-calendar"></i> <span id="viewPurchaseDate"></span><br />
                            <b>Item Name :</b> <span id="viewPurchaseItemName"></span><br />
                            <b>Quantity :</b> <span id="viewPurchaseQuantity"></span>
                        </div>
                        <div class="p-b-30 clearfix"></div>
                        <div>
                            <button type="button" class="btn btn-outline-dark goCancelViewPurchase float-right m-l-5">Cancel</button>
                            <button type="button" class="btn btn-success float-right" id="goPrintViewPurchase"><i class="fas fa-print"></i> Print</button>
                            <h4 class="card-title subinfo float-left">List of IMEI</h4>
                        </div>
                        <div class="clearfix"></div>
                        <div class="row form-group border-top p-t-15">
                            <div class="divTable unstyledTable imeiViewList"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>var p = "purchase";</script>
@*<script>
        $('input[name=imie]').numeric ( { allowEmpty:true, live:true }, function ( val ) {
      console.log ( val );
    });
        </script>*@

<!-- Include the image-diff library -->
@*<script src="~/Content/assets/js/quagga.min.js"></script>
    <script src="~/Content/assets/js/quagga.js"></script>*@
@*<script src="https://cdn.rawgit.com/serratus/quaggaJS/0420d5e0/dist/quagga.min.js"></script>*@

@*<script>
    var Quagga = window.Quagga;
    var App = {
        _scanner: null,
        init: function() {
            this.attachListeners();
        },
        activateScanner: function() {
            var scanner = this.configureScanner('.overlay__content'),
                onDetected = function (result) {
                    document.querySelector('input.isbn').value = result.codeResult.code;
                    stop();
                }.bind(this),
                stop = function() {
                    scanner.stop();  // should also clear all event-listeners?
                    scanner.removeEventListener('detected', onDetected);
                    this.hideOverlay();
                    this.attachListeners();
                }.bind(this);

            this.showOverlay(stop);
            scanner.addEventListener('detected', onDetected).start();
        },
        attachListeners: function() {
            var self = this,
                button = document.querySelector('.input-field input + button.scan');

            button.addEventListener("click", function onClick(e) {
                e.preventDefault();
                button.removeEventListener("click", onClick);
                self.activateScanner();
            });
        },
        showOverlay: function(cancelCb) {
            if (!this._overlay) {
                var content = document.createElement('div'),
                    closeButton = document.createElement('div');

                closeButton.appendChild(document.createTextNode('X'));
                content.className = 'overlay__content';
                closeButton.className = 'overlay__close';
                this._overlay = document.createElement('div');
                this._overlay.className = 'overlay';
                this._overlay.appendChild(content);
                content.appendChild(closeButton);
                closeButton.addEventListener('click', function closeClick() {
                    closeButton.removeEventListener('click', closeClick);
                    cancelCb();
                });
                document.body.appendChild(this._overlay);
            } else {
                var closeButton = document.querySelector('.overlay__close');
                closeButton.addEventListener('click', function closeClick() {
                    closeButton.removeEventListener('click', closeClick);
                    cancelCb();
                });
            }
            this._overlay.style.display = "block";
        },
        hideOverlay: function() {
            if (this._overlay) {
                this._overlay.style.display = "none";
            }
        },
        configureScanner: function(selector) {
            if (!this._scanner) {
                this._scanner = Quagga
                    .decoder({readers: ['ean_reader']})
                    .locator({patchSize: 'medium'})
                    .fromVideo({
                        target: selector,
                        constraints: {
                            width: 800,
                            height: 600,
                            facingMode: "environment"
                        }
                    });
            }
            return this._scanner;
        }
    };
    App.init();
           </script>*@
<script type="text/javascript" src="~/Content/assets/js/quagga.min.js"></script>
<style>
    #interactive.viewport {
        position: relative;
        width: 100%;
        height: auto;
        overflow: hidden;
        text-align: center;
    }

        #interactive.viewport > canvas, #interactive.viewport > video {
            max-width: 100%;
            width: 100%;
        }

    canvas.drawing, canvas.drawingBuffer {
        position: absolute;
        left: 0;
        top: 0;
    }
</style>
<script type="text/javascript">
    $(function () {
        // Create the QuaggaJS config object for the live stream
        var liveStreamConfig = {
            inputStream: {
                type: "LiveStream",
                constraints: {
                    width: { min: 640 },
                    height: { min: 480 },
                    aspectRatio: { min: 1, max: 100 },
                    facingMode: "environment" // or "user" for the front camera
                }
            },
            locator: {
                patchSize: "medium",
                halfSample: true
            },
            numOfWorkers: (navigator.hardwareConcurrency ? navigator.hardwareConcurrency : 4),
            decoder: {
                "readers": [
                    { "format": "ean_reader", "config": {} }
                ]
            },
            locate: true
        };
        // The fallback to the file API requires a different inputStream option.
        // The rest is the same
        var fileConfig = $.extend(
            {},
            liveStreamConfig,
            {
                inputStream: {
                    size: 800
                }
            }
        );
        // Start the live stream scanner when the modal opens
        $('#livestream_scanner').on('shown.bs.modal', function (e) {
            Quagga.init(
                liveStreamConfig,
                function (err) {
                    if (err) {
                        $('#livestream_scanner .modal-body .error').html('<div class="alert alert-danger"><strong><i class="fa fa-exclamation-triangle"></i> ' + err.name + '</strong>: ' + err.message + '</div>');
                        Quagga.stop();
                        return;
                    }
                    Quagga.start();
                }
            );
        });

        // Make sure, QuaggaJS draws frames an lines around possible
        // barcodes on the live stream
        Quagga.onProcessed(function (result) {
            var drawingCtx = Quagga.canvas.ctx.overlay,
                drawingCanvas = Quagga.canvas.dom.overlay;

            if (result) {
                if (result.boxes) {
                    drawingCtx.clearRect(0, 0, parseInt(drawingCanvas.getAttribute("width")), parseInt(drawingCanvas.getAttribute("height")));
                    result.boxes.filter(function (box) {
                        return box !== result.box;
                    }).forEach(function (box) {
                        Quagga.ImageDebug.drawPath(box, { x: 0, y: 1 }, drawingCtx, { color: "green", lineWidth: 2 });
                    });
                }

                if (result.box) {
                    Quagga.ImageDebug.drawPath(result.box, { x: 0, y: 1 }, drawingCtx, { color: "#00F", lineWidth: 2 });
                }

                if (result.codeResult && result.codeResult.code) {
                    Quagga.ImageDebug.drawPath(result.line, { x: 'x', y: 'y' }, drawingCtx, { color: 'red', lineWidth: 3 });
                }
            }
        });

        // Once a barcode had been read successfully, stop quagga and
        // close the modal after a second to let the user notice where
        // the barcode had actually been found.
        Quagga.onDetected(function (result) {
            if (result.codeResult.code) {
                $('#scanner_input').val(result.codeResult.code);
                Quagga.stop();
                setTimeout(function () { $('#livestream_scanner').modal('hide'); }, 1000);
            }
        });

        // Stop quagga in any case, when the modal is closed
        $('#livestream_scanner').on('hide.bs.modal', function () {
            if (Quagga) {
                Quagga.stop();
            }
        });

        // Call Quagga.decodeSingle() for every file selected in the
        // file input
        $("#livestream_scanner input:file").on("change", function (e) {
            if (e.target.files && e.target.files.length) {
                Quagga.decodeSingle($.extend({}, fileConfig, { src: URL.createObjectURL(e.target.files[0]) }), function (result) { alert(result.codeResult.code); });
            }
        });
    });
</script>